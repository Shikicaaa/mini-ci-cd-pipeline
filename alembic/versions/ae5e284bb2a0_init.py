"""Init

Revision ID: ae5e284bb2a0
Revises: 
Create Date: 2025-05-29 21:08:51.066636

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ae5e284bb2a0'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('configs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('repo_url', sa.String(), nullable=False),
    sa.Column('main_branch', sa.String(), nullable=False),
    sa.Column('platform', sa.Enum('GITHUB', 'GITLAB', 'BITBUCKET', 'GENERIC', name='githostplatform'), nullable=False),
    sa.Column('docker_username', sa.String(), nullable=True),
    sa.Column('installation_id', sa.BigInteger(), nullable=True),
    sa.Column('use_ssh_for_clone', sa.Boolean(), nullable=False),
    sa.Column('git_ssh_private_key_encrypted', sa.String(), nullable=True),
    sa.Column('git_ssh_key_passphrase_encrypted', sa.String(), nullable=True),
    sa.Column('git_ssh_host_key', sa.String(), nullable=True),
    sa.Column('SSH_host', sa.String(), nullable=True),
    sa.Column('SSH_port', sa.Integer(), nullable=True),
    sa.Column('SSH_username', sa.String(), nullable=True),
    sa.Column('SSH_key_path', sa.String(), nullable=True),
    sa.Column('SSH_key_passphrase', sa.String(), nullable=True),
    sa.Column('SSH_for_deploy', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_configs_id'), 'configs', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('pipeline_runs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('config_id', sa.Integer(), nullable=False),
    sa.Column('trigger_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING_GIT', 'RUNNING_DOCKER_BUILD', 'RUNNING_DOCKER_DEPLOY', 'SUCCESS', 'FAILED_GIT', 'FAILED_DOCKER_BUILD', 'FAILED_DOCKER_DEPLOY', 'UNKNOWN', name='pipelinestatusenum'), nullable=False),
    sa.Column('commit_sha', sa.String(), nullable=True),
    sa.Column('trigger_event_id', sa.String(), nullable=True),
    sa.Column('logs', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['config_id'], ['configs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pipeline_runs_id'), 'pipeline_runs', ['id'], unique=False)
    op.create_index(op.f('ix_pipeline_runs_trigger_event_id'), 'pipeline_runs', ['trigger_event_id'], unique=False)
    op.create_table('repo_user',
    sa.Column('repo_config_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['repo_config_id'], ['configs.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('tests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('result', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tests_id'), 'tests', ['id'], unique=False)
    op.create_table('webhooks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('repo_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('webhook_url', sa.String(), nullable=False),
    sa.Column('encoded_webhook_secret', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['repo_id'], ['configs.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_webhooks_id'), 'webhooks', ['id'], unique=False)
    op.create_table('repo_pipeline',
    sa.Column('repo_config_id', sa.Integer(), nullable=True),
    sa.Column('pipeline_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['pipeline_id'], ['pipeline_runs.id'], ),
    sa.ForeignKeyConstraint(['repo_config_id'], ['configs.id'], )
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('repo_pipeline')
    op.drop_index(op.f('ix_webhooks_id'), table_name='webhooks')
    op.drop_table('webhooks')
    op.drop_index(op.f('ix_tests_id'), table_name='tests')
    op.drop_table('tests')
    op.drop_table('repo_user')
    op.drop_index(op.f('ix_pipeline_runs_trigger_event_id'), table_name='pipeline_runs')
    op.drop_index(op.f('ix_pipeline_runs_id'), table_name='pipeline_runs')
    op.drop_table('pipeline_runs')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_configs_id'), table_name='configs')
    op.drop_table('configs')
    # ### end Alembic commands ###
