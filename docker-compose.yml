services:
  db:
    image: postgres:13
    container_name: my_postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:alpine
    container_name: my_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: my_redis_commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis

  web:
    build: .
    container_name: my_fastapi_app
    restart: unless-stopped
    ports:
      - "9000:9000"
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    command: ["uvicorn", "webhook_server:webhook_app", "--host", "0.0.0.0", "--port", "9000", "--reload"]

  worker:
    build: .
    container_name: my_celery_worker
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started 
      web:
        condition: service_started
    command: ["celery", "-A", "tasks", "worker", "-l", "info"]

volumes:
  redis_data:
  postgres_data:
